version: '3.8'
name: 'production'
services:
  # Postegres
  pg:
    image: postgres:12
    container_name: pg
    ports:
      - 5432:5432
    expose:
      - 5432:80
    environment:
      POSTGRES_USER: whypark
      POSTGRES_PASSWORD: whypark123
      POSTGRES_DB: db_why_park
    cap_add:
      - SYS_NICE
    networks:
      - backend-networks
    volumes:
      - postgres-db-data:/var/lib/postgres
  # Redis
  redis_whypk:
    image: redis:latest
    container_name: redis_whypk
    restart: unless-stopped
    env_file:
      - .env
    command: /bin/bash -c "redis-server --save 20 1 --loglevel warning  --requirepass $$REDIS_PASS"
    ports:
      - 6379:6379
    expose:
      - 6379:80
    cap_add:
      - SYS_NICE
    networks:
      - backend-networks
    environment:
      - REDIS_PASSWORD=password123
    volumes:
      - redis-data:/var/lib/redis
  # zookeeper
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - backend-networks
  # Kafka
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_TOPICS: reservar_vaga, reservar_vaga.reply
    networks:
      - backend-networks
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
  # Kafka monitor 
  kafka_ui:
    container_name: kafka_ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - backend-networks
  # Api Producer
  api_producer:
    image: producerapi
    container_name: api_producer
    restart: unless-stopped
    depends_on:
      - redis_whypk
      - kafka
      - pg
    links:
      - redis_whypk
    networks:
      - backend-networks
    environment:
      - DATABASE_URL=postgresql://whypark:whypark123@pg:5432/db_why_park?schema=public
      - REDIS_PASS = password123
      - REDIS_URI = redis://default:${REDIS_PASS}@redis_whypk:6379
      - KAKFA_URL=kafka:9094
      - ENVIRONMENT=dev
      - JWT_ACCESS_SECRET=t323t24hgwafa=
      - JWT_REFRESH_SECRET=asfqi33fgtrfewf3
      - PORT=3000
    ports:
      - 3000:3000
    expose:
      - 3000
  # APi Consumer
  api_consumer:
    image: apiconsumer:dev
    container_name: 'api_consumer'
    depends_on:
      - pg
      - kafka
    networks:
      - backend-networks
    volumes:
      - consumer-data:/usr/app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - NUGET_PACKAGES=/root/.nuget/fallbackpackages2
      - NUGET_FALLBACK_PACKAGES=/root/.nuget/fallbackpackages;/root/.nuget/fallbackpackages2
      - Logging__LogLevel__Default=Information
      - Logging__LogLevel__Microsoft.AspNetCore=Warning
      - ConnectionStrings__DefaultConnection=Server=pg;Port=5432;Database=db_why_park;User Id=whypark;Password=whypark123
    ports:
     - 32770:443
     - 32771:80
    expose:
       - 32770:443
       - 32771:80
  # Frontend
  frontend:
    image: frontend
    container_name: frontend
    depends_on:
      - api_producer
    networks:
      - backend-networks
    environment:
      - DEV=production
      - VITE_PORT=3000
      - VITE_SERVER=api_producer
    ports:
      - 5173:5173
    expose:
      - 5173
    volumes:
      - frontend-data:/var/lib/frontend

volumes:
  consumer-data:
    driver: local
  frontend-data:
    driver: local
  postgres-db-data:
    driver: local
  redis-data:
    driver: local
networks:
  backend-networks:
    driver: bridge
