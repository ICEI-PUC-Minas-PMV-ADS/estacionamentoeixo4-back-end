version: '3.8'
name: producer
services:
  pg:
    image: postgres:12
    container_name: pg
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: whypark
      POSTGRES_PASSWORD: whypark123
      POSTGRES_DB: db_why_park
    cap_add:
      - SYS_NICE
    networks:
      - backend-networks
    volumes:
      - postgres-db-data:/var/lib/postgres
  redis_whypk:
    container_name: redis_whypk
    image: redis
    command: redis-server --save 20 1 --loglevel warning  --requirepass password123
    ports:
      - "6379:6379"
    expose:
      - 6379:80
    cap_add:
      - SYS_NICE
    networks:
      - backend-networks
    environment:
      - REDIS_PASSWORD=password123

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - backend-networks

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_TOPICS: reservar_vaga, reservar_vaga.reply
    networks:
      - backend-networks
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
  kafka_ui:
    container_name: kafka_ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - backend-networks

  api_producer:
    image: producerapi
    container_name: api_producer
    cap_add:
      - SYS_NICE
    networks:
      - backend-networks
    environment:
      - DATABASE_URL=postgresql://whypark:whypark123@pg:5432/db_why_park?schema=public
      - HOST_REDIS=redis_whypk
      - PWD_REDIS=password123
      - PORT_REDIS=6379
      - KAKFA_URL=kafka:9094
      - ENVIRONMENT=dev
      - JWT_ACCESS_SECRET=t323t24hgwafa=
      - JWT_REFRESH_SECRET=asfqi33fgtrfewf3
      - PORT=3000

volumes:
  postgres-db-data:
networks:
  backend-networks:
    driver: bridge
